Description: Make the program work with legace GDK
 Because of the GDK changes, GDK_Escape has been replaced by GDK_KEY_Escape,
 several other GDK_* has also been changed to GDK_KEY_*. This pactch detect
 the GTK_MINOR_VERSION macro and handle the problem. The package itself
 depends on GTK+ rather than only GDK, so there is no need to make noise on
 detecting GDK specifc macros.
Author: CSSlayer <wengxt@gmail.com> and Aron Xu <happyaron.xu@gmail.com>
Last-Update: 2011-03-10
--- a/gtk/keygrab.c
+++ b/gtk/keygrab.c
@@ -101,10 +101,19 @@
     guint key;
     GdkModifierType mods = event->state & gtk_accelerator_get_default_mod_mask();
 
+#if GTK_MINOR_VERSION < 22 
+    if ((event->keyval == GDK_Escape
+            || event->keyval == GDK_Return) && !mods)
+#else
     if ((event->keyval == GDK_KEY_Escape
             || event->keyval == GDK_KEY_Return) && !mods)
+#endif
     {
+#if GTK_MINOR_VERSION < 22
+        if (event->keyval == GDK_Escape)
+#else
         if (event->keyval == GDK_KEY_Escape)
+#endif
             gtk_signal_emit_by_name(GTK_OBJECT(b), "changed", b->key, b->mods);
         end_key_grab(b);
         keygrab_button_set_key(b, 0, 0);
@@ -112,11 +121,20 @@
     }
 
     key = gdk_keyval_to_upper(event->keyval);
+#if GTK_MINOR_VERSION < 22
+    if (key == GDK_ISO_Left_Tab)
+        key = GDK_Tab;
+#else
     if (key == GDK_KEY_ISO_Left_Tab)
         key = GDK_KEY_Tab;
+#endif
 
     if (gtk_accelerator_valid(key, mods)
+#if GTK_MINOR_VERSION < 22
+            || (key == GDK_Tab && mods))
+#else
             || (key == GDK_KEY_Tab && mods))
+#endif
     {
         keygrab_button_set_key(b, key, mods);
         end_key_grab(b);
